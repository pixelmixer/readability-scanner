<!-- Sources Management Page -->
<div class="container-fluid mt-4">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <h1 class="h2 mb-3">News Sources Management</h1>
            <p class="text-muted">Manage RSS feed sources for news readability analysis</p>
        </div>
    </div>

    <!-- Add New Source Form -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Add New Source</h5>
                </div>
                <div class="card-body">
                    <form action="/sources/add" method="POST">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="url">RSS Feed URL *</label>
                                    <input type="url" class="form-control" id="url" name="url" required
                                           placeholder="https://feeds.reuters.com/reuters/topNews">
                                    <small class="form-text text-muted">
                                        Enter an RSS/XML feed URL, not an API endpoint.
                                        <a href="#" data-toggle="modal" data-target="#feedExamplesModal">See examples</a>
                                    </small>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="name">Source Name</label>
                                    <input type="text" class="form-control" id="name" name="name"
                                           placeholder="Optional - will auto-generate from URL">
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="description">Description</label>
                            <textarea class="form-control" id="description" name="description" rows="2"
                                      placeholder="Optional description for this source"></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary" id="addSourceBtn">
                            <i class="fas fa-plus"></i> Add Source
                        </button>
                        <small class="form-text text-muted mt-2">
                            <i class="fas fa-info-circle"></i> New sources will be scanned immediately for articles
                        </small>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Sources List -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Current Sources (<%= sources.length %>)</h5>
                    <div class="text-muted">
                        Total Articles: <%= sources.reduce((sum, source) => sum + source.articleCount, 0) %>
                    </div>
                </div>
                <div class="card-body p-0">
                    <% if (sources.length === 0) { %>
                        <div class="text-center p-4">
                            <i class="fas fa-rss fa-3x text-muted mb-3"></i>
                            <p class="text-muted">No sources configured yet. Add your first RSS feed above.</p>
                        </div>
                    <% } else { %>
                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead class="thead-light">
                                    <tr>
                                        <th>Source</th>
                                        <th>URL</th>
                                        <th>Articles</th>
                                        <th>Last Activity</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% sources.forEach((source, index) => { %>
                                        <tr>
                                            <td>
                                                <strong><%= source.name %></strong>
                                                <% if (source.description) { %>
                                                    <br><small class="text-muted"><%= source.description %></small>
                                                <% } %>
                                            </td>
                                            <td>
                                                <a href="<%= source.url %>" target="_blank" class="text-break">
                                                    <%= source.url.length > 50 ? source.url.substring(0, 50) + '...' : source.url %>
                                                </a>
                                            </td>
                                            <td>
                                                <% if (source.articleCount > 0) { %>
                                                    <span class="badge badge-success"><%= source.articleCount %></span>
                                                <% } else { %>
                                                    <span class="badge badge-secondary">0</span>
                                                <% } %>
                                            </td>
                                            <td>
                                                <% if (source.lastRefreshed) { %>
                                                    <small><strong>Manual:</strong> <%= new Date(source.lastRefreshed).toLocaleDateString() %></small><br>
                                                <% } %>
                                                <% if (source.lastFetched) { %>
                                                    <small><strong>Auto:</strong> <%= new Date(source.lastFetched).toLocaleDateString() %></small>
                                                <% } else if (!source.lastRefreshed) { %>
                                                    <small class="text-muted">Never scanned</small>
                                                <% } %>
                                            </td>
                                            <td>
                                                <button class="btn btn-sm btn-outline-success refresh-btn"
                                                        data-source-id="<%= source._id %>"
                                                        data-source-name="<%= source.name %>"
                                                        title="Scan this source for new articles">
                                                    <i class="fas fa-sync"></i> Refresh
                                                </button>
                                                <button class="btn btn-sm btn-outline-primary ml-1 edit-btn"
                                                        data-source-id="<%= source._id %>"
                                                        data-source-name="<%= source.name %>"
                                                        data-source-url="<%= source.url %>"
                                                        data-source-description="<%= source.description || '' %>">
                                                    <i class="fas fa-edit"></i> Edit
                                                </button>
                                                <button class="btn btn-sm btn-outline-danger ml-1 delete-btn"
                                                        data-source-id="<%= source._id %>"
                                                        data-source-name="<%= source.name %>">
                                                    <i class="fas fa-trash"></i> Delete
                                                </button>
                                            </td>
                                        </tr>
                                    <% }); %>
                                </tbody>
                            </table>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Source Modal -->
<div class="modal fade" id="editModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Source</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <form id="editForm" method="POST">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="editUrl">RSS Feed URL *</label>
                        <input type="url" class="form-control" id="editUrl" name="url" required>
                    </div>
                    <div class="form-group">
                        <label for="editName">Source Name</label>
                        <input type="text" class="form-control" id="editName" name="name">
                    </div>
                    <div class="form-group">
                        <label for="editDescription">Description</label>
                        <textarea class="form-control" id="editDescription" name="description" rows="2"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary" id="saveChangesBtn">Save Changes</button>
                    <small class="form-text text-muted mt-2 w-100">
                        <i class="fas fa-sync"></i> Source will be re-scanned after saving changes
                    </small>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Source</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the source <strong id="deleteSourceName"></strong>?</p>
                <p class="text-warning"><small>This will only remove the source from monitoring. Existing articles will remain in the database.</small></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="POST" style="display: inline;">
                    <button type="submit" class="btn btn-danger">Delete Source</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Navigation -->
<div class="row mt-4">
    <div class="col-12">
        <div class="card bg-light">
            <div class="card-body">
                <h6>Quick Navigation</h6>
                <a href="/daily" class="btn btn-outline-primary btn-sm mr-2">Daily Report</a>
                <a href="/graph" class="btn btn-outline-primary btn-sm mr-2">Graph View</a>
                <a href="/export" class="btn btn-outline-primary btn-sm">Export Data</a>
            </div>
        </div>
    </div>
</div>

<!-- RSS Feed Examples Modal -->
<div class="modal fade" id="feedExamplesModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">RSS Feed Examples</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h6>✅ Valid RSS Feed URLs:</h6>
                <div class="bg-light p-3 mb-3">
                    <div class="mb-2"><strong>Reuters:</strong> <code>https://feeds.reuters.com/reuters/topNews</code></div>
                    <div class="mb-2"><strong>BBC:</strong> <code>http://feeds.bbci.co.uk/news/rss.xml</code></div>
                    <div class="mb-2"><strong>CNN:</strong> <code>http://rss.cnn.com/rss/edition.rss</code></div>
                    <div class="mb-2"><strong>AP News:</strong> <code>https://feeds.apnews.com/rss/apf-topnews</code></div>
                    <div class="mb-2"><strong>NPR:</strong> <code>https://feeds.npr.org/1001/rss.xml</code></div>
                </div>

                <h6>❌ Invalid URLs (these won't work):</h6>
                <div class="bg-light p-3 mb-3">
                    <div class="mb-2"><span class="text-danger">API endpoints:</span> <code>https://api.example.com/v1/articles</code></div>
                    <div class="mb-2"><span class="text-danger">JSON APIs:</span> <code>https://site.com/api/news.json</code></div>
                    <div class="mb-2"><span class="text-danger">Web pages:</span> <code>https://www.example.com/news</code></div>
                </div>

                <h6>💡 How to Find RSS Feeds:</h6>
                <ul>
                    <li>Look for RSS icons <i class="fas fa-rss text-orange"></i> on news websites</li>
                    <li>Check the website's footer for "RSS" or "Feed" links</li>
                    <li>Add <code>/rss</code> or <code>/feed</code> to the website URL</li>
                    <li>URLs often contain "rss", "feed", or end in ".xml"</li>
                </ul>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="useExampleFeed()">Use Reuters Example</button>
            </div>
        </div>
    </div>
</div>

<!-- Toast notifications -->
<div class="position-fixed" style="top: 80px; right: 20px; z-index: 1050;">
    <!-- Scanning toast -->
    <div id="scanningToast" class="toast" role="alert" data-autohide="false">
        <div class="toast-header">
            <i class="fas fa-sync fa-spin text-primary mr-2"></i>
            <strong class="mr-auto">Scanning in Progress</strong>
            <button type="button" class="ml-2 mb-1 close" data-dismiss="toast">
                <span>&times;</span>
            </button>
        </div>
        <div class="toast-body">
            Your source is being scanned for articles in the background. Check back in a few moments for updated article counts.
        </div>
    </div>

    <!-- Refresh toast -->
    <div id="refreshToast" class="toast" role="alert" data-autohide="false">
        <div class="toast-header">
            <i class="fas fa-sync fa-spin text-success mr-2"></i>
            <strong class="mr-auto" id="refreshToastTitle">Refreshing Source</strong>
            <button type="button" class="ml-2 mb-1 close" data-dismiss="toast">
                <span>&times;</span>
            </button>
        </div>
        <div class="toast-body" id="refreshToastBody">
            Manually scanning source for new articles...
        </div>
    </div>

    <!-- Results toast -->
    <div id="resultsToast" class="toast" role="alert" data-delay="5000">
        <div class="toast-header">
            <i class="fas fa-check-circle text-success mr-2" id="resultsToastIcon"></i>
            <strong class="mr-auto" id="resultsToastTitle">Scan Complete</strong>
            <button type="button" class="ml-2 mb-1 close" data-dismiss="toast">
                <span>&times;</span>
            </button>
        </div>
        <div class="toast-body" id="resultsToastBody">
            Scan results will appear here.
        </div>
    </div>
</div>

<script>
// Build version logging for cache verification
console.log('🚀 News Analysis System - Frontend Loaded');
console.log('📦 Build Version: <%= buildVersion %>');
console.log('🕒 Build Timestamp: <%= buildTimestamp %>');
console.log('🔄 Page Load Time:', new Date().toISOString());

function editSource(id, name, url, description) {
    document.getElementById('editForm').action = '/sources/edit/' + id;
    document.getElementById('editName').value = name;
    document.getElementById('editUrl').value = url;
    document.getElementById('editDescription').value = description;
    $('#editModal').modal('show');
}

function deleteSource(id, name) {
    document.getElementById('deleteSourceName').textContent = name;
    document.getElementById('deleteForm').action = '/sources/delete/' + id;
    $('#deleteModal').modal('show');
}

// Auto-generate name from URL if not provided
document.getElementById('url').addEventListener('blur', function() {
    const nameField = document.getElementById('name');
    if (!nameField.value && this.value) {
        try {
            const url = new URL(this.value);
            nameField.value = url.hostname;
        } catch (e) {
            // Invalid URL, ignore
        }
    }
});

// Show scanning notification after form submissions
document.querySelector('form[action="/sources/add"]').addEventListener('submit', function() {
    // Show toast after a small delay to let the redirect happen
    setTimeout(() => {
        $('#scanningToast').toast('show');
    }, 100);
});

document.getElementById('editForm').addEventListener('submit', function() {
    // Hide the edit modal first
    $('#editModal').modal('hide');

    // Show scanning toast
    setTimeout(() => {
        $('#scanningToast').toast('show');
    }, 500);
});

// Check URL parameters to see if we should show the scanning toast
window.addEventListener('load', function() {
    const urlParams = new URLSearchParams(window.location.search);
    if (urlParams.has('scanning') || document.referrer.includes('/sources/add') || document.referrer.includes('/sources/edit')) {
        setTimeout(() => {
            $('#scanningToast').toast('show');
        }, 500);
    }
});

// Use example RSS feed
function useExampleFeed() {
    document.getElementById('url').value = 'https://feeds.reuters.com/reuters/topNews';
    document.getElementById('name').value = 'Reuters Top News';
    document.getElementById('description').value = 'Reuters top news headlines';
    $('#feedExamplesModal').modal('hide');
}

// Event handlers for buttons using data attributes
document.addEventListener('DOMContentLoaded', function() {
    // Refresh button handlers
    document.querySelectorAll('.refresh-btn').forEach(button => {
        button.addEventListener('click', function() {
            const sourceId = this.dataset.sourceId;
            const sourceName = this.dataset.sourceName;
            refreshSource(sourceId, sourceName);
        });
    });

    // Edit button handlers
    document.querySelectorAll('.edit-btn').forEach(button => {
        button.addEventListener('click', function() {
            const sourceId = this.dataset.sourceId;
            const sourceName = this.dataset.sourceName;
            const sourceUrl = this.dataset.sourceUrl;
            const sourceDescription = this.dataset.sourceDescription;
            editSource(sourceId, sourceName, sourceUrl, sourceDescription);
        });
    });

    // Delete button handlers
    document.querySelectorAll('.delete-btn').forEach(button => {
        button.addEventListener('click', function() {
            const sourceId = this.dataset.sourceId;
            const sourceName = this.dataset.sourceName;
            deleteSource(sourceId, sourceName);
        });
    });
});

// Refresh a specific source
async function refreshSource(sourceId, sourceName) {
    console.log(`Refreshing source: ${sourceName} (${sourceId})`);

    // Update button state
    const button = event.target.closest('button');
    const originalContent = button.innerHTML;
    button.innerHTML = '<i class="fas fa-sync fa-spin"></i> Refreshing...';
    button.disabled = true;

    // Show refresh toast
    document.getElementById('refreshToastTitle').textContent = `Refreshing ${sourceName}`;
    document.getElementById('refreshToastBody').textContent = `Scanning ${sourceName} for new articles...`;
    $('#refreshToast').toast('show');

    try {
        const response = await fetch(`/sources/refresh/${sourceId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        });

        const result = await response.json();

        // Hide refresh toast
        $('#refreshToast').toast('hide');

        if (result.success) {
            // Show success results
            const successRate = Math.round((result.result.scanned / result.result.total) * 100);
            const failureRate = 100 - successRate;

            document.getElementById('resultsToastIcon').className = 'fas fa-check-circle text-success mr-2';
            document.getElementById('resultsToastTitle').textContent = `✅ ${sourceName} Refreshed`;

            let message = `📊 Processed ${result.result.scanned}/${result.result.total} articles (${successRate}% success)`;
            if (result.result.failed > 0) {
                message += `\n❌ ${result.result.failed} failed (${failureRate}% - see server logs for details)`;
            }

            document.getElementById('resultsToastBody').innerHTML = message.replace(/\n/g, '<br>');
            $('#resultsToast').toast('show');

            // Refresh the page after a short delay to show updated counts
            setTimeout(() => {
                window.location.reload();
            }, 3000);

        } else {
            // Show error
            document.getElementById('resultsToastIcon').className = 'fas fa-exclamation-triangle text-danger mr-2';
            document.getElementById('resultsToastTitle').textContent = `❌ Refresh Failed`;
            document.getElementById('resultsToastBody').textContent = `Failed to refresh ${sourceName}: ${result.error}`;
            $('#resultsToast').toast('show');
        }

    } catch (error) {
        console.error('Error refreshing source:', error);

        // Hide refresh toast
        $('#refreshToast').toast('hide');

        // Show error toast
        document.getElementById('resultsToastIcon').className = 'fas fa-exclamation-triangle text-danger mr-2';
        document.getElementById('resultsToastTitle').textContent = `❌ Network Error`;
        document.getElementById('resultsToastBody').textContent = `Failed to refresh ${sourceName}: ${error.message}`;
        $('#resultsToast').toast('show');
    } finally {
        // Restore button state
        button.innerHTML = originalContent;
        button.disabled = false;
    }
}
</script>
