<div class="chart-container">
    <div id='flesch'><!-- Plotly chart will be drawn inside this DIV --></div>
</div>
<script src='https://cdn.plot.ly/plotly-latest.min.js'></script>

<script>
    // Build version logging
    console.log('ðŸš€ News Analysis System - Graph View');
    console.log('ðŸ“¦ Build Version: <%= buildVersion %>');
    console.log('ðŸ•’ Build Timestamp: <%= buildTimestamp %>');
    console.log('ðŸ”„ Page Load Time:', new Date().toISOString());

    const myData2 = <%- JSON.stringify(results.data) %>
    const xData = <%- JSON.stringify(dateList.map((e, i)=>e)) %>

    const traces = myData2.map(data=>({
        y: data.data,
        x: xData,
        name: data.label || "Unknown",
        mode: 'markers',
        type: 'scatter',
    }))

    const regressions = myData2.map(data=>{
        var indexes = xData.map((e, i)=>i)
        var lr = linearRegression(xData.map((e, i)=>i), data.data);
        var fit_from = 0
        var fit_to = indexes.length - 1

        var fit = {
            x: [xData[0], xData[xData.length - 1]],
            y: [fit_from*lr.sl+lr.off, fit_to*lr.sl+lr.off],
            mode: 'lines',
            type: 'scatter',
            name: data.label || "Unknown"
        };
        return fit
    })

    const layout = {
        title: 'Flesch Rating',
    };

    const config = {responsive: true}

    Plotly.newPlot('flesch', [...traces, ...regressions], layout, config);

    function linearRegression(x,y){
        var lr = {};
        var n = y.length;
        var sum_x = 0;
        var sum_y = 0;
        var sum_xy = 0;
        var sum_xx = 0;
        var sum_yy = 0;

        for (var i = 0; i < y.length; i++) {

            sum_x += x[i];
            sum_y += y[i];
            sum_xy += (x[i]*y[i]);
            sum_xx += (x[i]*x[i]);
            sum_yy += (y[i]*y[i]);
        }

        lr['sl'] = (n * sum_xy - sum_x * sum_y) / (n*sum_xx - sum_x * sum_x);
        lr['off'] = (sum_y - lr.sl * sum_x)/n;
        lr['r2'] = Math.pow((n*sum_xy - sum_x*sum_y)/Math.sqrt((n*sum_xx-sum_x*sum_x)*(n*sum_yy-sum_y*sum_y)),2);

        return lr;
}

</script>